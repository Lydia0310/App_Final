/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.yueli.userinterface.hospitalworkarea;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.yueli.business.device.Device;
import org.yueli.business.role.SupplierAdmin;
import org.yueli.business.useraccount.UserAccount;

/**
 *
 * @author Lydia
 */
public class ViewDeviceInventory extends javax.swing.JPanel {

    /**
     * Creates new form ViewDeviceInventory
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    public ViewDeviceInventory(JPanel userProcessContainer,UserAccount userAccount ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        populateInventoryTable();
    }
    
    public void populateInventoryTable(){
        DefaultTableModel model = (DefaultTableModel)deviceInventoryTable.getModel();
        model.setRowCount(0);
        for(Device device : ((SupplierAdmin)userAccount.getRole()).getDeviceCatalog().getDeviceList()){
            Object row[] = new Object[5];
            row[0] = device;
            row[1] = device.getSupplierID();
            row[2] = device.getFunction();
            row[3] = device.getStockCount();
            row[4] = device.getLocation();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deviceInventoryTable = new javax.swing.JTable();
        sortBySupplierNameButton = new javax.swing.JButton();
        sortByFunctionJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        requestDispatchingJButton = new javax.swing.JButton();

        deviceInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device Name", "Supplier ID", "Function", "Stock Count", "Storage Room"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(deviceInventoryTable);
        if (deviceInventoryTable.getColumnModel().getColumnCount() > 0) {
            deviceInventoryTable.getColumnModel().getColumn(0).setResizable(false);
            deviceInventoryTable.getColumnModel().getColumn(1).setResizable(false);
            deviceInventoryTable.getColumnModel().getColumn(2).setResizable(false);
            deviceInventoryTable.getColumnModel().getColumn(3).setResizable(false);
            deviceInventoryTable.getColumnModel().getColumn(4).setResizable(false);
        }

        sortBySupplierNameButton.setText("Sort by Supplier Name");
        sortBySupplierNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBySupplierNameButtonActionPerformed(evt);
            }
        });

        sortByFunctionJButton.setText("Sort by Function");

        backJButton.setText("<< Back");

        requestDispatchingJButton.setText("Request Dispatching");
        requestDispatchingJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestDispatchingJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(requestDispatchingJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sortBySupplierNameButton)
                                .addGap(339, 339, 339)
                                .addComponent(sortByFunctionJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortBySupplierNameButton)
                    .addComponent(sortByFunctionJButton))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backJButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(requestDispatchingJButton)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sortBySupplierNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBySupplierNameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortBySupplierNameButtonActionPerformed

    private void requestDispatchingJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestDispatchingJButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_requestDispatchingJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable deviceInventoryTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestDispatchingJButton;
    private javax.swing.JButton sortByFunctionJButton;
    private javax.swing.JButton sortBySupplierNameButton;
    // End of variables declaration//GEN-END:variables
}

