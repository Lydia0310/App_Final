/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.yueli.userinterface.doctorworkarea;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.yueli.business.Business;
import org.yueli.business.careteam.CareTeam;
import org.yueli.business.enterprise.Enterprise;
import org.yueli.business.enterprise.HospitalEnterprise;
import org.yueli.business.inventory.Inventory;
import org.yueli.business.inventory.InventoryItem;
import org.yueli.business.network.Network;
import org.yueli.business.organization.CareTeamOrganization;
import org.yueli.business.organization.Organization;
import org.yueli.business.patient.Patient;
import org.yueli.business.role.CareTeamAdmin;
import org.yueli.business.role.DoctorRole;
import org.yueli.business.role.HospitalAdmin;
import org.yueli.business.room.OperationRoom;
import org.yueli.business.room.Room;
import org.yueli.business.useraccount.UserAccount;
import org.yueli.business.workqueue.OperationRequest;

/**
 *
 * @author Lydia
 */
public class RequestOperation extends javax.swing.JPanel {

    /**
     * Creates new form RequestOperation
     */
    private JPanel userProcessContainer;
    private Business business;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    public RequestOperation(JPanel userProcessContainer, Business business, Enterprise enterprise, Network network, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        populatePatientCombo();
        populateCareTeamCombo();
        populateDeviceCombo();
        populateOperationRoomCombo();
        
    }
     public void populatePatientCombo(){
         patientNameCombo.removeAllItems();
         for(Patient patient: ((DoctorRole)userAccount.getRole()).getPatientDirectory().getPatientList()){
             patientNameCombo.addItem(patient);
         }
     }
     public void   populateCareTeamCombo(){
        careTeamCombo1.removeAllItems();
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof CareTeamOrganization){
                for(CareTeam careTeam : ((CareTeamOrganization)organization).getCareTeamDirectory().getCareTeamList()){
                    careTeamCombo1.addItem(careTeam);
                }
            }
        }
        
     }
     public void   populateDeviceCombo(){
     
         deviceNameCombo.removeAllItems();
        for(InventoryItem inventoryItem : ((HospitalEnterprise)enterprise).getInventory().getInventoryItemList()){
            deviceNameCombo.addItem(inventoryItem);
        }
     }
         
     public void   populateOperationRoomCombo(){
         operationRoomCombo1.removeAllItems();
         for(Room room : ((HospitalEnterprise)enterprise).getRoomDirectory().getRoomList()){
             if(room instanceof  OperationRoom){
                 operationRoomCombo1.addItem(room);
             }
         }
     }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        beginningTimeJTextField = new javax.swing.JTextField();
        endTimeJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        patientNameCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        careTeamCombo1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        deviceNameCombo = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        operationRoomCombo1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        quantityJSpinner = new javax.swing.JSpinner();
        requestOperation = new javax.swing.JButton();

        jLabel2.setText("End Time:");

        jLabel3.setText("(yyyy-MM-dd hh:mm:ss)");

        jLabel4.setText("(yyyy-MM-dd hh:mm:ss)");

        jLabel1.setText("Beginning Time:");

        jLabel5.setText("Patient Name:");

        jLabel6.setText("Care Team ID:");

        jLabel7.setText("Device Name:");

        jLabel8.setText("Operation Room Number:");

        jLabel9.setText("Device Quantity:");

        requestOperation.setText("Request Operation");
        requestOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestOperationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(patientNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(careTeamCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(deviceNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantityJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(operationRoomCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(135, 135, 135))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(beginningTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(endTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)))))
                        .addGap(168, 168, 168))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(requestOperation)
                        .addGap(118, 118, 118))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(patientNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(careTeamCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deviceNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(quantityJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(operationRoomCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(beginningTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51)
                .addComponent(requestOperation)
                .addContainerGap(148, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestOperationActionPerformed
        // TODO add your handling code here:
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String requestBeginningTime = beginningTimeJTextField.getText();
            String requestEndTime = endTimeJTextField.getText();
            Date beginningTime;
            Date endTime;
            try {
                beginningTime = df.parse(requestBeginningTime);
                endTime = df.parse(requestEndTime);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Time parse error!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
             OperationRequest operationRequest = new OperationRequest();
            Patient patient = (Patient)patientNameCombo.getSelectedItem();
            operationRequest.setPatient(patient);
            CareTeam careTeam = (CareTeam)careTeamCombo1.getSelectedItem();
            operationRequest.setCareTeamID(careTeam.getCareTeamID());
            InventoryItem inventoryItem = (InventoryItem)deviceNameCombo.getSelectedItem();
            operationRequest.setDeviceName(inventoryItem.getDevice().getDeviceName());
            OperationRoom operationRoom = (OperationRoom)operationRoomCombo1.getSelectedItem();
            operationRequest.setOperationRoomNumber(operationRoom.getOperationRoomNumber());
    
            operationRequest.setSender(userAccount);
            operationRequest.setRequestDate(operationRequest.getTimestamp());
            operationRequest.setDoctorName(userAccount.getPerson().getFirstName());
            operationRequest.setOperationRequestStatus("Pending");
            operationRequest.setBeginningTime(beginningTime);
            operationRequest.setEndTime(endTime);
    }//GEN-LAST:event_requestOperationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField beginningTimeJTextField;
    private javax.swing.JComboBox careTeamCombo1;
    private javax.swing.JComboBox deviceNameCombo;
    private javax.swing.JTextField endTimeJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox operationRoomCombo1;
    private javax.swing.JComboBox patientNameCombo;
    private javax.swing.JSpinner quantityJSpinner;
    private javax.swing.JButton requestOperation;
    // End of variables declaration//GEN-END:variables
}
